    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: crond-openshift-mvilche
    labels:
      template: crond-openshift-mvilche
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "crond-openshift-mvilche"
      iconClass: "icon-github"
      description: >-
        GO CROND TASKS NON ROOT - OPENSHIFT
        Martin Fabrizzio Vilche.
        https://github.com/mvilche.
      openshift.io/provider-display-name: "Martin Fabrizzio Vilche"
      openshift.io/documentation-url: "https://github.com/mvilche/crond-noroot.git"
      openshift.io/support-url: "https://github.com/mvilche/crond-noroot.git"
  message: >-
    Los servicios iniciarán en un par de minutos...
    Martin Fabrizzio Vilche        

  objects:


##################### CROND





  - apiVersion: v1
    data:
      tasks: |-
        # EJEMPLO DE TASKS
        SHELL=/bin/bash
        * * * * * 1001 bash -c "sleep 5 && id >> /tmp/test-1"
        #dia(*) hora(*) dia_del_mes(*) mes(*) dia_semana(*) id_usuario(1001) commando(sleep 5 && id >> /tmp/test-1)
      config.ini: |-
        // Mailuser="mail@mail.com"
        // Mailpassword="password"
        // Mailhost="host.com.uy"
        // Mailport=25
        // Maildestinos="mail@mail.com"
        // Ambiente="TEST"
    kind: ConfigMap
    metadata:
      name: tasks


  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "crond-tasks"
      name: "crond-tasks"
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: crond-tasks
        deploymentconfig: crond-tasks
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: crond-tasks
            deploymentconfig: crond-tasks
        spec:
          containers:
            - env:
                - name: TIMEZONE
                  value: America/Montevideo
              image: "crond-tasks:latest"
              imagePullPolicy: Always
              name: crond-tasks
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              command:
              - bash
              - "-c"
              - |
                set -e
                echo '···································································································'
                echo 'MARTIN FABRIZZIO VILCHE - https://github.com/mvilche'
                echo '···································································································'
                APP_NAME=GO-CROND
                cat << EOF > /tmp/example_tasks
                # EJEMPLO DE TASKS
                SHELL=/bin/sh
                * * * * * 1001 sleep 5 && id >> /tmp/test-1
                #dia(*) hora(*) dia_del_mes(*) mes(*) dia_semana(*) id_usuario(1001) commando(sleep 5 && id >> /tmp/test-1)
                EOF
                cat /tmp/example_tasks
                echo '···································································································'
                echo 'AGREGUE SUS TAREAS PROGRAMADAS A /usr/share/crond/ CON EL FORMATO MOSTRADO EN EL EJEMPLO'
                echo '···································································································'
                if [ -z '$TIMEZONE' ]; then
                echo '···································································································'
                echo 'VARIABLE TIMEZONE NO SETEADA - INICIANDO CON VALORES POR DEFECTO'
                echo 'POSIBLES VALORES: America/Montevideo | America/El_Salvador'
                echo '···································································································'
                else
                echo '···································································································'
                echo 'TIMEZONE SETEADO ENCONTRADO: ' $TIMEZONE
                echo '···································································································'
                cat /usr/share/zoneinfo/$TIMEZONE > /etc/localtime && \
                echo $TIMEZONE > /etc/timezone
                fi
                echo 'INICIANDO $APP_NAME....'
                sleep 5s
                exec go-crond --allow-unprivileged --no-auto --verbose --include=/usr/share/crond
              volumeMounts:
                - mountPath: /usr/share/crond
                  name: tasks
              livenessProbe:
                exec:
                  command:
                    - bash
                    - '-c'
                    - pidof go-crond
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              readinessProbe:
                exec:
                  command:
                    - bash
                    - '-c'
                    - |
                      pidof go-crond
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5                  
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                name: tasks
              name: tasks
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - crond-tasks
            from:
              kind: ImageStreamTag
              name: "crond-tasks:latest"
          type: ImageChange


  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: crond-tasks
      name: crond-tasks
    spec:
      completionDeadlineSeconds: 1800
      output:
        to:
          kind: ImageStreamTag
          name: crond-tasks:latest
      source:
        contextDir: .
        git:
          ref: master
          uri: 'https://github.com/mvilche/crond-noroot.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile
      triggers:
        - type: "ConfigChange"


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: crond-tasks
      name: crond-tasks
    spec: {}
